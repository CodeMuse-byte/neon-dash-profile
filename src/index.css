
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Rajdhani:wght@300;400;500;600&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 220 25% 6%;
    --foreground: 0 0% 88%;

    --card: 220 25% 8%;
    --card-foreground: 0 0% 88%;

    --popover: 220 25% 8%;
    --popover-foreground: 0 0% 88%;

    --primary: 240 100% 60%;
    --primary-foreground: 0 0% 100%;

    --secondary: 200 100% 55%;
    --secondary-foreground: 0 0% 100%;

    --muted: 220 25% 12%;
    --muted-foreground: 0 0% 65%;

    --accent: 260 75% 65%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 220 25% 20%;
    --input: 220 25% 20%;
    --ring: 240 100% 60%;

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-rajdhani;
    background: hsl(var(--background));
  }

  .font-orbitron {
    font-family: 'Orbitron', monospace;
  }

  .font-rajdhani {
    font-family: 'Rajdhani', sans-serif;
  }

  .text-glow {
    text-shadow: 0 0 10px currentColor;
  }

  .grid-bg {
    background-image: 
      linear-gradient(hsl(var(--border)) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--border)) 1px, transparent 1px);
    background-size: 50px 50px;
  }

  .cyber-border {
    position: relative;
  }

  .cyber-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--secondary)));
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
  }

  .writing-mode-vertical {
    writing-mode: vertical-lr;
  }
}

@layer utilities {
  .animate-pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-3d-rotate {
    animation: rotate3d 8s linear infinite;
  }

  .animate-bounce-3d {
    animation: bounce3d 4s ease-in-out infinite;
  }

  @keyframes pulse-glow {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.7;
      transform: scale(1.02);
    }
  }

  @keyframes float {
    0%, 100% { 
      transform: translateY(0px) translateX(0px) rotate(0deg); 
      opacity: 0.3;
    }
    25% { 
      transform: translateY(-8px) translateX(4px) rotate(2deg); 
      opacity: 0.6;
    }
    50% { 
      transform: translateY(-12px) translateX(-4px) rotate(-1deg); 
      opacity: 0.8;
    }
    75% { 
      transform: translateY(-6px) translateX(6px) rotate(1deg); 
      opacity: 0.5;
    }
  }

  @keyframes rotate3d {
    0% {
      transform: rotateY(0deg) rotateX(0deg);
    }
    25% {
      transform: rotateY(90deg) rotateX(5deg);
    }
    50% {
      transform: rotateY(180deg) rotateX(0deg);
    }
    75% {
      transform: rotateY(270deg) rotateX(-5deg);
    }
    100% {
      transform: rotateY(360deg) rotateX(0deg);
    }
  }

  @keyframes bounce3d {
    0%, 100% {
      transform: perspective(1000px) rotateX(0deg) rotateY(0deg) translateZ(0px);
    }
    25% {
      transform: perspective(1000px) rotateX(10deg) rotateY(5deg) translateZ(20px);
    }
    50% {
      transform: perspective(1000px) rotateX(-5deg) rotateY(-10deg) translateZ(10px);
    }
    75% {
      transform: perspective(1000px) rotateX(5deg) rotateY(15deg) translateZ(30px);
    }
  }
}
